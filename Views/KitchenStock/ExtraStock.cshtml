@model NibsMVC.Models.AddExtraStock

@{
    ViewBag.Title = "Add Extra Stock";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using NibsMVC.EDMX;


<script type="text/javascript">

    $(document).ready(function () {

        $("#Cat").change(function () {
            $("#RawId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getite")',

                dataType: 'json',

                data: { id: $("#Cat").val() },


                success: function (items) {

                    $("#RawId").append('<option value="--Select Item--">--Select Item--</option>');
                    $.each(items, function (i, item) {
                        $("#RawId").append('<option value="' + item.Value + '">' +
                             item.Text + '</option>');

                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve Category and Item.' + ex);
                }
            });
            return false;
        })
    });

</script>

<script type="text/javascript">

    $(document).ready(function () {

        $("#RawId").change(function () {
            $("#addstock").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Stockavailable")',

                dataType: 'json',

                data: { id: $("#RawId").val() },


                success: function (stocks) {

                    $('#addstock').val(stocks);
                    
                },
                error: function (ex) {
                    alert('Failed to retrieve stock' + ex);
                }
            });
            return false;
        })
    });

</script>

<script type="text/javascript">

    $(document).ready(function () {

        $("#RawId").change(function () {
            $("#addRate").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Rateavailable")',

                dataType: 'json',

                data: { id: $("#RawId").val() },


                success: function (Rates) {

                    $('#addRate').val(Rates);

                },
                error: function (ex) {
                    alert('Failed to retrieve stock' + ex);
                }
            });
            return false;
        })
    });

</script>





<div class="page-content">
    <div class="row">
        <div class="col-md-12">
            <div class="portlet box blue">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-gift"></i>Stock Transfer
                    </div>

                </div>
                <div class="portlet-body form">
                    <!-- BEGIN FORM-->
                    @using (Html.BeginForm("ExtraStock", "KitchenStock", FormMethod.Post, new { @id = "form_sample_14", @class = "form-horizontal", @enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="form-body">
                            <div class="alert alert-danger display-hide">
                                <button class="close" data-close="alert"></button>
                                You have some form errors. Please check below.
                            </div>
                            <div style="height:10px;"><span class="errmsg"></span></div>

                            <div class="from-group">
                                <table id="tbloutletdetail" class="table table-bordered"></table>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Select Category <span class="required">
                                        *
                                    </span>
                                </label>
                                <div class="col-md-4">
                                    <div class="input-icon right">
                                        @Html.DropDownList("Cat", ViewBag.CategoryList as List<SelectListItem>, "--Choose Your Category --", new { @class = "form-control" })
                                        @*@Html.DropDownListFor(model => model.RawcategoryId, new SelectList(ViewBag.CategoryList, "Value", "Text"), "--Choose Your Category--", new { @class = "form-control", @id = "Category" })*@

                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Item <span class="required">
                                        *
                                    </span>
                                </label>
                                <div class="col-md-4">
                                    <div class="input-icon right">
                                        <i class="fa"></i>
                                        @Html.DropDownListFor(model=>model.RawMaterial, new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control", @id = "RawId" })
                                        @*@Html.DropDownListFor(model => model.RawMaterialId, new SelectList(ViewBag.itemlists, "Value", "Text"), "--Choose Your Item--", new { @class = "form-control" })*@
                                        @*@Html.DropDownList("RawMaterialId", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control", @id = "RawMaterialId" })*@
                                        
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Add Stock
                                </label>
                                <div class="col-md-4">
                                    <div class="input-icon right">
                                        <i class="fa"></i>
                                        @Html.TextBoxFor(model => model.currentstock, new { @class = "form-control", @id = "addstock" })
                                        @Html.ValidationMessageFor(m => m.currentstock)
                                        @*<input type="text" class="form-control" id="stock" />*@
                                       
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Add Rate
                                </label>
                                <div class="col-md-4">
                                    <div class="input-icon right">
                                        <i class="fa"></i>
                                        @Html.TextBoxFor(model => model.currentvalue, new { @class = "form-control", @id = "addRate" })
                                        @Html.ValidationMessageFor(m => m.currentstock)
                                        @*<input type="text" class="form-control" id="stock" />*@

                                    </div>
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Date
                                </label>
                                <div class="col-md-4">
                                    <div class="input-icon right">
                                        <i class="fa"></i>
                                        @Html.TextBoxFor(model => model.stockDate, "{0:dd-MMM-yyyy}", new { @value =  DateTime.Now.ToString("dd-MMM-yyyy") , @class = "form-control form-control-inline input-medium date-picker", @readonly = "readonly", @id = "stockDate" })
                                        @*@Html.ValidationMessageFor(m => m.stockDate)*@
                                        @*<input type="text" class="form-control" id="stock" />*@

                                        @*<input class="form-control form-control-inline input-medium date-picker" data-date-format="dd-MMM-yyyy" size="16" type="text" value=@DateTime.Now.ToShortDateString() name="InvoiceDate" readonly="readonly" />*@

                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-offset-3 col-md-9">
                                    <button type="submit" class="btn green" >Submit</button>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
    <script>


        $('#btnstocksubmit').on('click', function (e) {
            var IsValid = true;
            e.preventDefault();
            var stockval = "";
            var reamin = "";

            $('#table_Stocktransfer tbody tr').each(function () {



                if ($(this).find('td:eq(1) input').val() != "") {
                    $(this).find('td:eq(1) input').removeClass("errorSubmit");
                    var outvalue = $(this).find('td:eq(0) input').val();
                    stockval += outvalue + "^";

                    var itnme = $(this).find('td:eq(1) input').attr("id");
                    stockval = stockval + itnme + "^";

                    //var avlstck = $(this).find('td:eq(4) input').attr("id");
                    //stockval = stockval + avlstck + "^";

                    var transfrstk = $(this).find('td:eq(3) input').attr("id");
                    stockval = stockval + transfrstk + ";";


                    var selctid = $(this).find('td:eq(1) input').attr("id");
                    reamin += selctid + "^";

                    var transferquantity = $(this).find('td:eq(3) input').val();
                    reamin = reamin + transferquantity + "^";

                    var Outid = $(this).find('td:eq(0) input').val();
                    reamin = reamin + Outid + "^";

                    var remaingpurchase = $(this).find('td:eq(4) input').val();
                    reamin = reamin + remaingpurchase + "^";

                    var remaingpurchase = $(this).find('td:eq(5) input').val();
                    reamin = reamin + remaingpurchase + "^";

                    var dept = $(this).find('td:eq(6) input').val();
                    reamin = reamin + dept + "^";

                    var pdate = $(this).find('td:eq(7) input').val();
                    reamin = reamin + pdate + ";";

                }
                else {
                    $(this).find('td:eq(1) input').addClass("errorSubmit");
                    IsValid = false;
                }

            });
            if (IsValid == true) {
                stockval = stockval.substring(0, stockval.length - 1);
                var items = { 'RawmaterialId': stockval };
                reamin = reamin.replace('.', 'dot');
                reamin = reamin.replace('.', 'dot');

                $("#Stocktransdata").val(stockval);
                $.getJSON('/StockTransfer/purchaseavailablestock/' + reamin, function (data) {



                });
                //$("#Updatedata").val(reamin);
                $("#form_sample_14").submit();
            }
            else {
                return false;
            }

        });
    </script>
</div>
