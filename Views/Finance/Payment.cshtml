@model NibsMVC.Models.Payment

@{
    ViewBag.Title = "Receipt";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using NibsMVC.EDMX;
<div class="page-content">
    <div class="row">
        <p style="color:red">@TempData["Perror"]</p>
        <div class="col-md-12">
            <div class="portlet box blue">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-gift"></i>Payment
                    </div>
                </div>
                <div class="portlet-body form">
                    <!-- BEGIN FORM-->
                    @using (Html.BeginForm("Payment", "Finance", FormMethod.Post, new { @id = "form_sample_6", @class = "form-horizontal" }))
                    {

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.VoucherEntryId)
                        <input type="hidden" name="itemsdata" id="itemsdata" value="" />
                        <div class="form-body">
                            <div class="alert alert-danger display-hide">
                                <button class="close" data-close="alert"></button>
                                You have some form errors. Please check below.
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="col-md-6">Voucher No</label>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.VoucherNo, new { @class = "form-control", @id = "vouch" })
                                        @Html.ValidationMessageFor(model => model.VoucherNo)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="col-md-4">Voucher Date</label>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.Date, new { @Value = " ", id = "datepicker", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Date)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="col-md-5">Record No</label>
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(model => model.RecordNo, new { @class = "form-control", @readonly = "readonly", @id="Recor" })

                                    </div>
                                </div>
                            </div>

                            <div class="col-md-1">
                                @{ NIBSEntities db1 = new NIBSEntities();
                                    int ptx = 1;
                                    <a class="btn btn-success" data-toggle="modal" href="#@ptx">
                                        Bill Details
                                    </a>
                                    <div class="modal fade" id="@ptx" tabindex="-1" role="basic" aria-hidden="true">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                                            <h4 class="modal-title">Item Details</h4>
                                        </div>
                                        <div class="modal-body">
                                            <table class="table table-bordered" id="sample_13">
                                                <thead>
                                                    <tr>
                                                        <th>Select</th>
                                                        <th>Invoice</th>
                                                        <th>Invoice Date</th>
                                                        <th>Vendor</th>
                                                        <th>Amount</th>
                                                        <th>GST</th>
                                                        <th>Total Amount</th>
                                                        <th>Balance</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @{
                                                        NIBSEntities db = new NIBSEntities();

                                                        var Itemdetails = (from p in db.tblPurchaseMasters where !db.Voucher_Entry_Debit.Any(Voucher_Entry_Debit => Voucher_Entry_Debit.purchase_id == p.PurchaseId && Voucher_Entry_Debit.voucher_dbt_amount == p.NetAmount) select p).ToList();


                                                        foreach (var i in Itemdetails)
                                                        {
                                                            decimal Returned = (from q in db.Voucher_Entry_Debit
                                                                                join p in db.Voucher_Entry_Credit
                                               on new { q.voucher_no, q.record_no } equals new { p.voucher_no, p.record_no }
                                                                                join r in db.tblPurchaseMasters on q.purchase_id equals r.PurchaseId
                                                                                where r.PurchaseId == i.PurchaseId
                                                                                select r.NetAmount - q.voucher_dbt_amount).Sum() ?? 0;

                                                            var sumTotal = (from od in db.Voucher_Entry_Debit
                                                                            where od.purchase_id == i.PurchaseId
                                                                            select od.voucher_dbt_amount).Sum();

                                                            decimal j = i.NetAmount - Convert.ToDecimal(sumTotal);

                                                            if (j != 0)
                                                            {
                                                                <tr>
                                                                    <td><input name="checkGRN" type="checkbox" class="check" value="@i.PurchaseId" /></td>
                                                                    <td>@i.InvoiceNo</td>
                                                                    <td>@i.InvoiceDate.ToString("dd-MM-yyyy")</td>
                                                                    <td>@i.tblVendor.Name</td>
                                                                    <td>@i.TotalAmount.ToString("0.00")</td>
                                                                    <td>@i.Tax.ToString("0.00")</td>
                                                                    <td>@i.NetAmount.ToString("0.00")</td>
                                                                    @if (Returned != 0)
                                                                    {
                                                                        <td>@Returned.ToString("0.00")</td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td>@i.NetAmount.ToString("0.00")</td>
                                                                    }
                                                                    @*<td><a href="@Url.Action("PurchaseReturn", "Purchase", new { purchaseid = i.PurchaseId, purchasdetailId = i.PurchaseDetailId })"><span class="fa fa-repeat"></span></a></td>*@
                                                                </tr>
                                                            }
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" id="selectGRN" class="btn default" data-dismiss="modal">Enter</button>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="col-md-12">
                                <div class="portlet">
                                    <div class="portlet-title">
                                        <div class="caption">
                                            <i class="fa fa-gift"></i>By Details
                                        </div>
                                    </div>
                                    <table id="tableRoutingData" class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>By Account</th>
                                                <th>Dr Amount</th>
                                                <th>Cheque No</th>
                                                <th>Cheque Date</th>
                                                <th>Narration</th>
                                                <th>Action</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr menuid="-1">
                                                <td>
                                                    <select id="cat_0" class="form-control Keys" name="ByAccount"></select>
                                                    <input id="hcat_0" type="hidden" class="form-control Keys" name="PurchaseId" />
                                                </td>
                                                <td>
                                                    <input id="Item_0" type="text" class="dramnt form-control Keys" name="DrAmount" />
                                                    @Html.ValidationMessageFor(model => model.DrAmount, "", new { @class = "error" })
                                                </td>
                                                <td>
                                                    <input id="txtQty_0" type="text" class="form-control Keys" name="ChequeNo" />
                                                </td>
                                                <td>
                                                    <input id="Type_0" type="text" class="form-control Keys" name="ChequeDate" />

                                                </td>
                                                <td>
                                                    <input id="Narration_0" type="text" class="form-control Keys" name="DrNarration" />

                                                </td>
                                                <td>

                                                    <button type="button" id="btnadd" class="btn btn-success btn-sm defaults">
                                                        <span class="fa fa-plus"></span>
                                                    </button>
                                                </td>
                                            </tr>
                                        <tbody>
                                    </table>
                                </div>
                            </div>

                            <div class="portlet">
                                <div class="portlet-title">
                                    <div class="caption">
                                        <i class="fa fa-gift"></i>To Details
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <table id="tableRoutingDataDebit" class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>To Account</th>
                                                <th>Credit Amount</th>
                                                <th>Narration</th>
                                                <th>Action</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr menuidd="-1">
                                                <td>
                                                    <select id="By_0" class="form-control Keys" name="LedgerAccId"></select>

                                                </td>
                                                <td>
                                                    <input id="Dr_0" type="text" class="creamnt form-control Keys" name="CreditAmount" />
                                                    @Html.ValidationMessageFor(model => model.CreditAmount, "", new { @class = "error" })
                                                </td>
                                                <td>
                                                    <input id="NarrationD_0" type="text" class="form-control" name="CrNarration" />

                                                </td>
                                                <td>

                                                    <button type="button" id="btnaddd" class="btn btn-success btn-sm defaults">
                                                        <span class="fa fa-plus"></span>
                                                    </button>
                                                </td>
                                            </tr>
                                        <tbody>
                                    </table>
                                </div>
                                <div class="row">
                                    <div class="col-md-offset-3 col-md-9">
                                        <button type="submit" id="submitgrn" class="btn green">Submit</button>

                                    </div>
                                </div>
                            </div>
                        </div>

                                                        }

                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {


        $.ajax({
            type: 'POST',
            url: '/Finance/getCategories',

            dataType: 'json',

            //data: { LedgerMasterId: $("#Vendor").val() },


            success: function (items) {

                $("#cat_0").append('<option value="--Select Item--">--Select Category--</option>');
                $.each(items, function (i, item) {
                    $("#cat_0").append('<option value="' + item.Value + '">' + item.Text + '</option>');

                });
            },

            error: function (ex) {
                alert('Failed to retrieve Category and Item.' + ex);
            }
        });
        return false;
    });
    $(document).ready(function () {


        $.ajax({
            type: 'POST',
            url: '/Finance/getByAcc',

            dataType: 'json',

            //data: { LedgerMasterId: $("#Vendor").val() },


            success: function (items) {

                $("#By_0").append('<option value="--Select Item--">--Select Category--</option>');
                $.each(items, function (i, item) {
                    $("#By_0").append('<option value="' + item.Value + '">' + item.Text + '</option>');

                });
            },

            error: function (ex) {
                alert('Failed to retrieve Category and Item.' + ex);
            }
        });
        return false;
    });


</script>
<script>
    $(document).ready(function () {


        var counter = 1;
        $(document).on("click", ".minus", function (e) {
            var id = $(this).attr('id');

            $(this).parent("td").parent("tr").remove();
            counter--;
        });



        $('#btnadd').on('click', function () {
            $('#tableRoutingData').append('<tr MenuID="-1" class="trEdit" id="tr_' + counter + '"><td><select id="cat_' + counter + '" name="ByAccount" class="form-control Keys"/><input id="hcat_' + counter + '" type="hidden" name="purchaseid" class="form-control"/></td><td><input id="Item_' + counter + '" type="text" name="DrAmount" class="form-control Keys"/></td><td>' +
                '<input id="txtQty_' + counter + '" type="text" name="ChequeNo" class="form-control input-md"  /></td><td><input id="Type_' + counter + '" type="text" name="ChequeDate" ' +
                 ' class="form-control input-md"/></td><td><input id="Narration_' + counter + '" type="DrNarration" name="DrNarration" ' +
                 ' class="form-control input-md"/></td><td>' +
                  '<button data-val="' + counter + '"' +
                 ' style="margin-top:10px;" type="button" id="btnminus_' + counter + '" ' +
                 'class="minus btn btn-danger btn-sm defaults"><span class="fa fa-minus"></span></button></td></tr>');
            $('#cat_0 option').clone().appendTo('#cat_' + counter);
            $('#hcat_0 option').clone().appendTo('#hcat_' + counter);
            $('#Item_0 option').clone().appendTo('#Item_' + counter);
            $('#txtQty_0 option').clone().appendTo('#txtQty_' + counter);
            $('#Type_0 option').clone().appendTo('#Type_' + counter);
            $('#Narration_0 option').clone().appendTo('#Narration_' + counter);
            $("#Type_" + counter).datepicker({ dateFormat: 'dd/mm/yy' });
            counter++;
        });
        $('#btnaddd').on('click', function () {
            $('#tableRoutingDataDebit').append('<tr MenuIDD="-1" class="trEditD" id="tr_' + counter + '"><td><select id="By_' + counter + '" name="LedgerAccId" class="form-control Keys"/></td><td><input id="Dr_' + counter + '" type="text" name="CreditAmount" class="form-control Keys"/></td>' +
                 ' <td><input id="NarrationD_' + counter + '" type="CrNarration" name="CrNarration" ' +
                 ' class="form-control input-md"/></td><td>' +
                  '<button data-val="' + counter + '"' +
                 ' style="margin-top:10px;" type="button" id="btnminus_' + counter + '" ' +
                 'class="minus btn btn-danger btn-sm defaults"><span class="fa fa-minus"></span></button></td></tr>');
            $('#By_0 option').clone().appendTo('#By_' + counter);
            $('#Dr_0 option').clone().appendTo('#Dr_' + counter);
            $('#NarrationD_0 option').clone().appendTo('#NarrationD_' + counter);
            counter++;
        });
    });

    $('#selectGRN').on('click', function () {
        $("tr.trEdit").remove();
        var val = [];
        var FormData = [];

        $(':checkbox:checked').each(function (i) {

            FormData[i] = ($(this).val());


        });


        $.ajax({
            type: 'POST',
            url: '@Url.Action("getGRNInvoice")',

            dataType: 'json',

            data: { id: FormData },


            success: function (items) {

                count = 0;

                //var obj = jQuery.parseJSON(items);
                $.each(items, function (key, value) {

                    if (count == 0) {
                        $("#cat_0").val(value.Name);
                        $("#hcat_0").val(value.PurchaseId);
                        $("#Item_0").val(value.Total);
                        $("#txtQty_0").val();
                        $("#Type_0").val();
                        $("#Narration_0").val();

                    }

                    else {

                        $('#tableRoutingData').append('<tr MenuID="-1" class="trEdit" id="tr_' + count + '"><td><select id="cat_' + count + '" name="ByAccount" class="form-control Keys"/><input id="hcat_' + count + '" type="hidden" name="purchaseid" class="form-control"/></td><td><input id="Item_' + count + '" type="text" name="DrAmount" class="form-control Keys"/></td><td>' +
                '<input id="txtQty_' + count + '" type="text" name="ChequeNo" class="form-control input-md"  /></td><td><input id="Type_' + count + '" type="text" name="ChequeDate" ' +
                 ' class="form-control input-md"/></td><td><input id="Narration_' + count + '" type="DrNarration" name="DrNarration" ' +
                 ' class="form-control input-md"/></td><td>' +
                  '<button data-val="' + count + '"' +
                 ' style="margin-top:10px;" type="button" id="btnminus_' + count + '" ' +
                 'class="minus btn btn-danger btn-sm defaults"><span class="fa fa-minus"></span></button></td></tr>');
                        $('#cat_0 option').clone().appendTo('#cat_' + count);
                        $('#hcat_0 option').clone().appendTo('#hcat_' + count);
                        $('#Item_0 option').clone().appendTo('#Item_' + count);
                        $('#txtQty_0 option').clone().appendTo('#txtQty_' + count);
                        $('#Type_0 option').clone().appendTo('#Type_' + count);
                        $('#Narration_0 option').clone().appendTo('#Narration_' + count);
                        $("#Type_" + count).datepicker({ dateFormat: 'dd/mm/yy' });
                        //alert(value.Name);

                        $("#cat_" + count).val(value.Name);
                        $("#hcat_" + count).val(value.PurchaseId);
                        $("#Item_" + count).val(value.Total);
                        $("#txtQty_" + count).val();
                        $("#Type_" + count).val();
                        $("#Narration_" + count).val();
                        //$("#Type_" + count).datepicker({ dateFormat: 'dd/mm/yy' });
                    }
                    count++;
                });

            },
            error: function (ex) {

            }
        });


    });


    @*$('#submitgrn').on('click', function (e) {

            //var credit=[];
            //var debit=[];

            //alert(Item_0);

            @*$('#@Html.IdFor(m => m.CreditAmount)').each(function(i)
            {
                credit[i]=($(this).val());
            });
            $('#@Html.IdFor(m => m.DrAmount)').each(function(i)
            {
                debit[i]=($(this).val());
            });*@
    //var model =@Html.Raw(Json.Encode(Model))

    @*var model = @Html.Raw(Json.Encode(Model.CreditAmount))
        var model1 = @Html.Raw(Json.Encode(Model.DrAmount))*@

    @*$.ajax({
                type: 'POST',
                url: '@Url.Action("CreditDebitValidation")',

                dataType: 'json',

                data: { id: model,model1 },


                success: function (items) {

                },
                error: function (ex) {

                }
            });
        });*@




    //$('#submitgrn').click(function () {
    //    $('[id^=Item_').each(function (i, item) {
    //        var grade = $(item).val();
    //        alert(grade);
    //    });
    //});


    $('#submitgrn').on('click', function (e) {

        cr = 0;
        dr = 0;

        $('[id^=Item_').each(function (i, item) {
            var gradec = $(item).val();
            cr += parseInt(gradec);
            //total += parseInt($(this).val());
        });

        $('[id^=Dr_').each(function (i, item) {
            var graded = $(item).val();
            dr += parseInt(graded);
        });


        if (cr == dr) {

            return true;
        }
        else {
            alert("Your Credit and Debit Amount is Having Some Variation ,Please Check and insert Correct Amount !");

            return false;
        }
    });
</script>
<script type="text/javascript">
    $(document).ready(function () { $("#datepicker").datepicker({ dateFormat: 'dd/mm/yy' }); });
    $(document).ready(function () { $("#Type_0").datepicker({ dateFormat: 'dd/mm/yy' }); });
</script>
